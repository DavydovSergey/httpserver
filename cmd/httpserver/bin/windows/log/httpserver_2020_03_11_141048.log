2020/03/11 14:10:48 [INFO] - main.go:[126] - main.func1() - Server is starting up: Version, Logfile ['0.0.5, commit 'aaf4321', build time '2020-03-11_11:10:43'', '.\log\httpserver_2020_03_11_141048.log']
2020/03/11 14:10:48 [INFO] - main.go:[130] - main.func1() - Set log level ['DEBUG']
2020/03/11 14:10:48 [INFO] - daemon.go:[44] - New() - Create new daemon
2020/03/11 14:10:48 [INFO] - daemon_config.go:[27] - loadConfigFile() - Loading HTTP Server config from file: FileName ['httpserver.cfg']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'ReadTimeout', '6000']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'WriteTimeout', '6000']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'IdleTimeout', '6000']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'MaxHeaderBytes', '262144']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'MaxBodyBytes', '1048576']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'UseProfile', 'false']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'ShutdownTimeout', '30']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['TLS', 'UseTLS', 'false']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['JWT', 'UseJWT', 'false']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['AUTHENTIFICATION', 'AuthType', 'INTERNAL']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLog', 'false']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLogFileName', './httplog/http%s.log']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPErrLog', 'HEADER | BODY']
2020/03/11 14:10:48 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLog', 'false']
2020/03/11 14:10:48 [INFO] - httpserver.go:[61] - New() - Creating new HTTP server
2020/03/11 14:10:48 [INFO] - httpserver.go:[141] - New() - Created new TCP listener: network = 'tcp', address ['127.0.0.1:3000']
2020/03/11 14:10:48 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/httperrlog', 'POST']
2020/03/11 14:10:48 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/echo', 'POST']
2020/03/11 14:10:48 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/signin', 'POST']
2020/03/11 14:10:48 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/refresh', 'POST']
2020/03/11 14:10:48 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/httplog', 'POST']
2020/03/11 14:10:48 [INFO] - httpserver.go:[179] - New() - HTTP server is created
2020/03/11 14:10:48 [INFO] - daemon.go:[122] - New() - New daemon is created
2020/03/11 14:10:48 [INFO] - daemon.go:[129] - (*Daemon).Run() - Starting daemon
2020/03/11 14:10:48 [INFO] - daemon.go:[134] - (*Daemon).Run() - Daemon is running. For exit <CTRL-c>
2020/03/11 14:10:48 [INFO] - httpserver.go:[209] - (*Server).Run() - Starting HTTP server
2020/03/11 14:11:55 [DEBUG] - handler_log.go:[82] - (*Service).HTTPErrorLogHandler() - START   ==================================================================================
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['1']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['1', 'POST', 'POST']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['1', 'INTERNAL']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['1']
2020/03/11 14:11:55 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman'
2020/03/11 14:11:55 [INFO] - handler_auth.go:[45] - (*Service)._checkBasicAuthentication() - Success Internal Authentication, username='roman'
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[185] - (*Service).Process() - Reading request body: reqID ['1']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[193] - (*Service).Process() - Read request body: reqID, len(body) ['1', '0']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[196] - (*Service).Process() - Calling external function handler: reqID, function ['1', '0x7ffac0']
2020/03/11 14:11:55 [DEBUG] - handler_log.go:[86] - (*Service).HTTPErrorLogHandler.func1() - START: reqID ['1']
2020/03/11 14:11:55 [DEBUG] - handler_log.go:[109] - (*Service).HTTPErrorLogHandler.func1() - SUCCESS ['1']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[210] - (*Service).Process() - Logging HTTP out response: reqID ['1']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[215] - (*Service).Process() - Set HTTP response headers: reqID ['1']
2020/03/11 14:11:55 [DEBUG] - httpservice.go:[223] - (*Service).Process() - Set HTTP response status: reqID, Status ['1', 'OK']
2020/03/11 14:11:55 [DEBUG] - handler_log.go:[113] - (*Service).HTTPErrorLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:06 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 14:12:06 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['2']
2020/03/11 14:12:06 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['2', 'POST', 'POST']
2020/03/11 14:12:06 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['2', 'INTERNAL']
2020/03/11 14:12:06 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['2']
2020/03/11 14:12:06 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman1'
2020/03/11 14:12:06 [INFO] - handler_auth.go:[42] - (*Service)._checkBasicAuthentication() - ID=[1], code=[8010], mes=[Invalid user or password], args=['roman1']
2020/03/11 14:12:06 [ERROR] - httpservice.go:[246] - (*Service).processError() - reqID:['2'], ID=[1], code=[8010], mes=[Invalid user or password], args=['roman1'], caller=[handler_auth.go:[41] - (*Service)._checkBasicAuthentication()], trace='
github.com/romapres2010/httpserver/error.New
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:72
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service)._checkBasicAuthentication
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:41
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:169
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).HTTPLogHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_log.go:18
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:137
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 14:12:06 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:13 [DEBUG] - handler_log.go:[82] - (*Service).HTTPErrorLogHandler() - START   ==================================================================================
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['3']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['3', 'POST', 'POST']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['3', 'INTERNAL']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['3']
2020/03/11 14:12:13 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman'
2020/03/11 14:12:13 [INFO] - handler_auth.go:[45] - (*Service)._checkBasicAuthentication() - Success Internal Authentication, username='roman'
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[185] - (*Service).Process() - Reading request body: reqID ['3']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[193] - (*Service).Process() - Read request body: reqID, len(body) ['3', '0']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[196] - (*Service).Process() - Calling external function handler: reqID, function ['3', '0x7ffac0']
2020/03/11 14:12:13 [DEBUG] - handler_log.go:[86] - (*Service).HTTPErrorLogHandler.func1() - START: reqID ['3']
2020/03/11 14:12:13 [DEBUG] - handler_log.go:[109] - (*Service).HTTPErrorLogHandler.func1() - SUCCESS ['3']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[210] - (*Service).Process() - Logging HTTP out response: reqID ['3']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[215] - (*Service).Process() - Set HTTP response headers: reqID ['3']
2020/03/11 14:12:13 [DEBUG] - httpservice.go:[223] - (*Service).Process() - Set HTTP response status: reqID, Status ['3', 'OK']
2020/03/11 14:12:13 [DEBUG] - handler_log.go:[113] - (*Service).HTTPErrorLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:14 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 14:12:14 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['4']
2020/03/11 14:12:14 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['4', 'POST', 'POST']
2020/03/11 14:12:14 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['4', 'INTERNAL']
2020/03/11 14:12:14 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['4']
2020/03/11 14:12:14 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman1'
2020/03/11 14:12:14 [INFO] - handler_auth.go:[42] - (*Service)._checkBasicAuthentication() - ID=[2], code=[8010], mes=[Invalid user or password], args=['roman1']
2020/03/11 14:12:14 [ERROR] - httpservice.go:[246] - (*Service).processError() - reqID:['4'], ID=[2], code=[8010], mes=[Invalid user or password], args=['roman1'], caller=[handler_auth.go:[41] - (*Service)._checkBasicAuthentication()], trace='
github.com/romapres2010/httpserver/error.New
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:72
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service)._checkBasicAuthentication
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:41
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:169
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).HTTPLogHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_log.go:18
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:137
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 14:12:14 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:19 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 14:12:19 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['5']
2020/03/11 14:12:19 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['5', 'POST', 'POST']
2020/03/11 14:12:19 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['5', 'INTERNAL']
2020/03/11 14:12:19 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['5']
2020/03/11 14:12:19 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman1'
2020/03/11 14:12:19 [INFO] - handler_auth.go:[42] - (*Service)._checkBasicAuthentication() - ID=[3], code=[8010], mes=[Invalid user or password], args=['roman1']
2020/03/11 14:12:19 [ERROR] - httpservice.go:[246] - (*Service).processError() - reqID:['5'], ID=[3], code=[8010], mes=[Invalid user or password], args=['roman1'], caller=[handler_auth.go:[41] - (*Service)._checkBasicAuthentication()], trace='
github.com/romapres2010/httpserver/error.New
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:72
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service)._checkBasicAuthentication
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:41
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:169
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).HTTPLogHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_log.go:18
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:137
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 14:12:19 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:26 [DEBUG] - handler_log.go:[82] - (*Service).HTTPErrorLogHandler() - START   ==================================================================================
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['6']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['6', 'POST', 'POST']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['6', 'INTERNAL']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['6']
2020/03/11 14:12:26 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman'
2020/03/11 14:12:26 [INFO] - handler_auth.go:[45] - (*Service)._checkBasicAuthentication() - Success Internal Authentication, username='roman'
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[185] - (*Service).Process() - Reading request body: reqID ['6']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[193] - (*Service).Process() - Read request body: reqID, len(body) ['6', '0']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[196] - (*Service).Process() - Calling external function handler: reqID, function ['6', '0x7ffac0']
2020/03/11 14:12:26 [DEBUG] - handler_log.go:[86] - (*Service).HTTPErrorLogHandler.func1() - START: reqID ['6']
2020/03/11 14:12:26 [DEBUG] - handler_log.go:[109] - (*Service).HTTPErrorLogHandler.func1() - SUCCESS ['6']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[210] - (*Service).Process() - Logging HTTP out response: reqID ['6']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[215] - (*Service).Process() - Set HTTP response headers: reqID ['6']
2020/03/11 14:12:26 [DEBUG] - httpservice.go:[223] - (*Service).Process() - Set HTTP response status: reqID, Status ['6', 'OK']
2020/03/11 14:12:26 [DEBUG] - handler_log.go:[113] - (*Service).HTTPErrorLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:28 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 14:12:28 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['7']
2020/03/11 14:12:28 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['7', 'POST', 'POST']
2020/03/11 14:12:28 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['7', 'INTERNAL']
2020/03/11 14:12:28 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['7']
2020/03/11 14:12:28 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman1'
2020/03/11 14:12:28 [INFO] - handler_auth.go:[42] - (*Service)._checkBasicAuthentication() - ID=[4], code=[8010], mes=[Invalid user or password], args=['roman1']
2020/03/11 14:12:28 [ERROR] - httpservice.go:[246] - (*Service).processError() - reqID:['7'], ID=[4], code=[8010], mes=[Invalid user or password], args=['roman1'], caller=[handler_auth.go:[41] - (*Service)._checkBasicAuthentication()], trace='
github.com/romapres2010/httpserver/error.New
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:72
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service)._checkBasicAuthentication
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:41
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:169
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).HTTPLogHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_log.go:18
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:137
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 14:12:28 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:35 [DEBUG] - handler_log.go:[82] - (*Service).HTTPErrorLogHandler() - START   ==================================================================================
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['8']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['8', 'POST', 'POST']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['8', 'INTERNAL']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['8']
2020/03/11 14:12:35 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman'
2020/03/11 14:12:35 [INFO] - handler_auth.go:[45] - (*Service)._checkBasicAuthentication() - Success Internal Authentication, username='roman'
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[185] - (*Service).Process() - Reading request body: reqID ['8']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[193] - (*Service).Process() - Read request body: reqID, len(body) ['8', '0']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[196] - (*Service).Process() - Calling external function handler: reqID, function ['8', '0x7ffac0']
2020/03/11 14:12:35 [DEBUG] - handler_log.go:[86] - (*Service).HTTPErrorLogHandler.func1() - START: reqID ['8']
2020/03/11 14:12:35 [DEBUG] - handler_log.go:[109] - (*Service).HTTPErrorLogHandler.func1() - SUCCESS ['8']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[210] - (*Service).Process() - Logging HTTP out response: reqID ['8']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[215] - (*Service).Process() - Set HTTP response headers: reqID ['8']
2020/03/11 14:12:35 [DEBUG] - httpservice.go:[223] - (*Service).Process() - Set HTTP response status: reqID, Status ['8', 'OK']
2020/03/11 14:12:35 [DEBUG] - handler_log.go:[113] - (*Service).HTTPErrorLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:37 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 14:12:37 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['9']
2020/03/11 14:12:37 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['9', 'POST', 'POST']
2020/03/11 14:12:37 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['9', 'INTERNAL']
2020/03/11 14:12:37 [DEBUG] - httpservice.go:[168] - (*Service).Process() - JWT is of. Need Authentication: reqID ['9']
2020/03/11 14:12:37 [DEBUG] - handler_auth.go:[36] - (*Service)._checkBasicAuthentication() - Get Authorization header, username='roman1'
2020/03/11 14:12:37 [INFO] - handler_auth.go:[42] - (*Service)._checkBasicAuthentication() - ID=[5], code=[8010], mes=[Invalid user or password], args=['roman1']
2020/03/11 14:12:37 [ERROR] - httpservice.go:[246] - (*Service).processError() - reqID:['9'], ID=[5], code=[8010], mes=[Invalid user or password], args=['roman1'], caller=[handler_auth.go:[41] - (*Service)._checkBasicAuthentication()], trace='
github.com/romapres2010/httpserver/error.New
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:72
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service)._checkBasicAuthentication
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:41
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:169
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).HTTPLogHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_log.go:18
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:137
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 14:12:37 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 14:12:49 [INFO] - daemon.go:[143] - (*Daemon).Run() - Exiting, got signal ['interrupt']
2020/03/11 14:12:49 [INFO] - daemon.go:[156] - (*Daemon).Shutdown() - Shutting down daemon
2020/03/11 14:12:49 [INFO] - httpserver.go:[215] - (*Server).Shutdown() - Waiting for shutdown HTTP Server: sec ['30']
2020/03/11 14:12:49 [INFO] - httpserver.go:[231] - (*Server).Shutdown() - HTTP Server shutdown successfuly
2020/03/11 14:12:49 [INFO] - daemon.go:[168] - (*Daemon).Shutdown() - Daemon is shutdown
2020/03/11 14:12:49 [INFO] - main.go:[163] - main.func1() - Server is shutdown
