2020/03/11 17:29:32 [INFO] - main.go:[126] - main.func1() - Server is starting up: Version, Logfile ['0.0.5, commit '14e1af5', build time '2020-03-11_14:29:23'', '.\log\httpserver_2020_03_11_172932.log']
2020/03/11 17:29:32 [INFO] - main.go:[130] - main.func1() - Set log level ['DEBUG']
2020/03/11 17:29:32 [INFO] - daemon.go:[44] - New() - Create new daemon
2020/03/11 17:29:32 [INFO] - daemon_config.go:[27] - loadConfigFile() - Loading HTTP Server config from file: FileName ['httpserver.cfg']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'ReadTimeout', '6000']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'WriteTimeout', '6000']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'IdleTimeout', '6000']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'MaxHeaderBytes', '262144']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'MaxBodyBytes', '1048576']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'UseProfile', 'false']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'ShutdownTimeout', '30']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['TLS', 'UseTLS', 'false']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['JWT', 'UseJWT', 'true']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['JWT', 'JWTExpiresAt', '20']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['AUTHENTIFICATION', 'AuthType', 'INTERNAL']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLog', 'false']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLogFileName', './httplog/http%s.log']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPErrLog', 'HEADER | BODY']
2020/03/11 17:29:32 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLog', 'false']
2020/03/11 17:29:32 [INFO] - httpserver.go:[61] - New() - Creating new HTTP server
2020/03/11 17:29:32 [INFO] - httpserver.go:[141] - New() - Created new TCP listener: network = 'tcp', address ['127.0.0.1:3000']
2020/03/11 17:29:32 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/echo', 'POST']
2020/03/11 17:29:32 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/signin', 'POST']
2020/03/11 17:29:32 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/refresh', 'POST']
2020/03/11 17:29:32 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/httplog', 'POST']
2020/03/11 17:29:32 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/httperrlog', 'POST']
2020/03/11 17:29:32 [INFO] - httpserver.go:[179] - New() - HTTP server is created
2020/03/11 17:29:32 [INFO] - daemon.go:[122] - New() - New daemon is created
2020/03/11 17:29:32 [INFO] - daemon.go:[129] - (*Daemon).Run() - Starting daemon
2020/03/11 17:29:32 [INFO] - daemon.go:[134] - (*Daemon).Run() - Daemon is running. For exit <CTRL-c>
2020/03/11 17:29:32 [INFO] - httpserver.go:[209] - (*Server).Run() - Starting HTTP server
2020/03/11 17:29:44 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 17:29:44 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['1']
2020/03/11 17:29:44 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['1', 'POST', 'POST']
2020/03/11 17:29:44 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['1', 'INTERNAL']
2020/03/11 17:29:44 [DEBUG] - httpservice.go:[190] - (*Service).Process() - JWT is on. Check JSON web token: reqID ['1']
2020/03/11 17:29:44 [INFO] - httpservice.go:[196] - (*Service).Process() - ID=[1], code=[8005], mes=[JWT token does not present in Cookie. You have to authorize first.], causemes=['http: named cookie not present']
2020/03/11 17:29:44 [ERROR] - httpservice.go:[272] - (*Service).processError() - reqID:['1'], ID=[1], code=[8005], mes=[JWT token does not present in Cookie. You have to authorize first.], causemes=['http: named cookie not present'], caller=[httpservice.go:[195] - (*Service).Process()], trace='
github.com/romapres2010/httpserver/error.WithCause
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:86
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:195
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).HTTPLogHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_log.go:18
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:138
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 17:29:44 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 17:29:52 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 17:29:52 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['2']
2020/03/11 17:29:52 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['2', 'POST', 'POST']
2020/03/11 17:29:52 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['2', 'INTERNAL']
2020/03/11 17:29:52 [DEBUG] - httpservice.go:[190] - (*Service).Process() - JWT is on. Check JSON web token: reqID ['2']
2020/03/11 17:29:52 [INFO] - httpservice.go:[196] - (*Service).Process() - ID=[2], code=[8005], mes=[JWT token does not present in Cookie. You have to authorize first.], causemes=['http: named cookie not present']
2020/03/11 17:29:52 [ERROR] - httpservice.go:[272] - (*Service).processError() - reqID:['2'], ID=[2], code=[8005], mes=[JWT token does not present in Cookie. You have to authorize first.], causemes=['http: named cookie not present'], caller=[httpservice.go:[195] - (*Service).Process()], trace='
github.com/romapres2010/httpserver/error.WithCause
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:86
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:195
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).HTTPLogHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_log.go:18
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:138
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 17:29:52 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 17:29:58 [DEBUG] - handler_auth.go:[58] - (*Service).SinginHandler() - START   ==================================================================================
2020/03/11 17:29:58 [DEBUG] - handler_auth.go:[71] - (*Service).SinginHandler() - Get Authorization header: reqID, username ['3', 'roman']
2020/03/11 17:29:58 [INFO] - handler_auth.go:[23] - (*Service).checkAuthentication() - Success Internal Authentication: username ['roman']
2020/03/11 17:29:58 [DEBUG] - handler_auth.go:[90] - (*Service).SinginHandler() - Create new JSON web token: reqID ['3']
2020/03/11 17:29:58 [DEBUG] - jwt.go:[66] - CreateJWT() - JWT: claims ['&{roman { 1583937018  0  0 }}']
2020/03/11 17:29:58 [DEBUG] - jwt.go:[77] - CreateJWT() - JWT: tokenString ['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTM3MDE4fQ.TrYMtGqMEzREV-iKimaSzYbJ7Db2_4nbD6iKzgdtf5Y']
2020/03/11 17:29:58 [DEBUG] - handler_auth.go:[101] - (*Service).SinginHandler() - Set HTTP Cookie: reqID, cookie ['3', 'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTM3MDE4fQ.TrYMtGqMEzREV-iKimaSzYbJ7Db2_4nbD6iKzgdtf5Y; Expires=Wed, 11 Mar 2020 14:30:18 GMT']
2020/03/11 17:29:58 [DEBUG] - handler_auth.go:[106] - (*Service).SinginHandler() - SUCCESS ==================================================================================
2020/03/11 17:30:00 [DEBUG] - handler_log.go:[15] - (*Service).HTTPLogHandler() - START   ==================================================================================
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['4']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['4', 'POST', 'POST']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['4', 'INTERNAL']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[190] - (*Service).Process() - JWT is on. Check JSON web token: reqID ['4']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[210] - (*Service).Process() - Reading request body: reqID ['4']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[218] - (*Service).Process() - Read request body: reqID, len(body) ['4', '0']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[221] - (*Service).Process() - Calling external function handler: reqID, function ['4', '0x7ffac0']
2020/03/11 17:30:00 [DEBUG] - handler_log.go:[19] - (*Service).HTTPLogHandler.func1() - START: reqID ['4']
2020/03/11 17:30:00 [INFO] - httplog.go:[65] - (*Logger).SetConfig() - Set HTTP loger config: cfg ['{true true true true true true}']
2020/03/11 17:30:00 [DEBUG] - handler_log.go:[73] - (*Service).HTTPLogHandler.func1() - SUCCESS ['4']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[236] - (*Service).Process() - Logging HTTP out response: reqID ['4']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[241] - (*Service).Process() - Set HTTP response headers: reqID ['4']
2020/03/11 17:30:00 [DEBUG] - httpservice.go:[249] - (*Service).Process() - Set HTTP response status: reqID, Status ['4', 'OK']
2020/03/11 17:30:00 [DEBUG] - handler_log.go:[77] - (*Service).HTTPLogHandler() - SUCCESS ==================================================================================
2020/03/11 17:30:03 [DEBUG] - handler_auth.go:[58] - (*Service).SinginHandler() - START   ==================================================================================
2020/03/11 17:30:03 [DEBUG] - handler_auth.go:[71] - (*Service).SinginHandler() - Get Authorization header: reqID, username ['5', 'roman']
2020/03/11 17:30:03 [INFO] - handler_auth.go:[23] - (*Service).checkAuthentication() - Success Internal Authentication: username ['roman']
2020/03/11 17:30:03 [DEBUG] - handler_auth.go:[90] - (*Service).SinginHandler() - Create new JSON web token: reqID ['5']
2020/03/11 17:30:03 [DEBUG] - jwt.go:[66] - CreateJWT() - JWT: claims ['&{roman { 1583937023  0  0 }}']
2020/03/11 17:30:03 [DEBUG] - jwt.go:[77] - CreateJWT() - JWT: tokenString ['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTM3MDIzfQ.MUrdY4FHGxXGLCRG_pXWF-kXHuggGJIoztBi__joFd8']
2020/03/11 17:30:03 [DEBUG] - handler_auth.go:[101] - (*Service).SinginHandler() - Set HTTP Cookie: reqID, cookie ['5', 'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTM3MDIzfQ.MUrdY4FHGxXGLCRG_pXWF-kXHuggGJIoztBi__joFd8; Expires=Wed, 11 Mar 2020 14:30:23 GMT']
2020/03/11 17:30:03 [DEBUG] - handler_auth.go:[106] - (*Service).SinginHandler() - SUCCESS ==================================================================================
2020/03/11 17:30:05 [DEBUG] - handler_auth.go:[111] - (*Service).JWTRefreshHandler() - START   ==================================================================================
2020/03/11 17:30:05 [DEBUG] - handler_auth.go:[119] - (*Service).JWTRefreshHandler() - JWT is on. Check JSON web token: reqID ['6']
2020/03/11 17:30:05 [DEBUG] - handler_auth.go:[139] - (*Service).JWTRefreshHandler() - JWT is valid. Create new JSON web token: reqID ['6']
2020/03/11 17:30:05 [DEBUG] - jwt.go:[66] - CreateJWT() - JWT: claims ['&{roman { 1583937025  0  0 }}']
2020/03/11 17:30:05 [DEBUG] - jwt.go:[77] - CreateJWT() - JWT: tokenString ['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTM3MDI1fQ.r67jErjmXozgpIE44HoGF8vGvR9VL_FCOlX_vr9mOmA']
2020/03/11 17:30:05 [DEBUG] - handler_auth.go:[149] - (*Service).JWTRefreshHandler() - Set HTTP Cookie: reqID, cookie ['6', 'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTM3MDI1fQ.r67jErjmXozgpIE44HoGF8vGvR9VL_FCOlX_vr9mOmA; Expires=Wed, 11 Mar 2020 14:30:25 GMT']
2020/03/11 17:30:05 [DEBUG] - handler_auth.go:[155] - (*Service).JWTRefreshHandler() - SUCCESS ==================================================================================
2020/03/11 17:49:17 [INFO] - daemon.go:[143] - (*Daemon).Run() - Exiting, got signal ['interrupt']
2020/03/11 17:49:17 [INFO] - daemon.go:[156] - (*Daemon).Shutdown() - Shutting down daemon
2020/03/11 17:49:17 [INFO] - httpserver.go:[215] - (*Server).Shutdown() - Waiting for shutdown HTTP Server: sec ['30']
2020/03/11 17:49:17 [INFO] - httpserver.go:[231] - (*Server).Shutdown() - HTTP Server shutdown successfuly
2020/03/11 17:49:17 [INFO] - daemon.go:[168] - (*Daemon).Shutdown() - Daemon is shutdown
2020/03/11 17:49:17 [INFO] - main.go:[163] - main.func1() - Server is shutdown
