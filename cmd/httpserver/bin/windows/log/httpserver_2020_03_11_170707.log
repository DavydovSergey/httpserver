2020/03/11 17:07:07 [INFO] - main.go:[126] - main.func1() - Server is starting up: Version, Logfile ['0.0.5, commit 'aaf4321', build time '2020-03-11_14:07:03'', '.\log\httpserver_2020_03_11_170707.log']
2020/03/11 17:07:07 [INFO] - main.go:[130] - main.func1() - Set log level ['DEBUG']
2020/03/11 17:07:07 [INFO] - daemon.go:[44] - New() - Create new daemon
2020/03/11 17:07:07 [INFO] - daemon_config.go:[27] - loadConfigFile() - Loading HTTP Server config from file: FileName ['httpserver.cfg']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'ReadTimeout', '6000']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'WriteTimeout', '6000']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'IdleTimeout', '6000']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'MaxHeaderBytes', '262144']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'MaxBodyBytes', '1048576']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'UseProfile', 'false']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['HTTP_SERVER', 'ShutdownTimeout', '30']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['TLS', 'UseTLS', 'false']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['JWT', 'UseJWT', 'true']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[381] - loadIntFromSection() - Load config parameter: Section, Parameter, Value ['JWT', 'JWTExpiresAt', '20000']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['AUTHENTIFICATION', 'AuthType', 'INTERNAL']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLog', 'false']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLogFileName', './httplog/http%s.log']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[394] - loadStringFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPErrLog', 'HEADER | BODY']
2020/03/11 17:07:07 [INFO] - daemon_config.go:[422] - loadBoolFromSection() - Load config parameter: Section, Parameter, Value ['LOG', 'HTTPLog', 'false']
2020/03/11 17:07:07 [INFO] - httpserver.go:[61] - New() - Creating new HTTP server
2020/03/11 17:07:07 [INFO] - httpserver.go:[141] - New() - Created new TCP listener: network = 'tcp', address ['127.0.0.1:3000']
2020/03/11 17:07:07 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/echo', 'POST']
2020/03/11 17:07:07 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/signin', 'POST']
2020/03/11 17:07:07 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/refresh', 'POST']
2020/03/11 17:07:07 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/httplog', 'POST']
2020/03/11 17:07:07 [INFO] - httpserver.go:[155] - New() - Handler is registered: Path, Method ['/httperrlog', 'POST']
2020/03/11 17:07:07 [INFO] - httpserver.go:[179] - New() - HTTP server is created
2020/03/11 17:07:07 [INFO] - daemon.go:[122] - New() - New daemon is created
2020/03/11 17:07:07 [INFO] - daemon.go:[129] - (*Daemon).Run() - Starting daemon
2020/03/11 17:07:07 [INFO] - daemon.go:[134] - (*Daemon).Run() - Daemon is running. For exit <CTRL-c>
2020/03/11 17:07:07 [INFO] - httpserver.go:[209] - (*Server).Run() - Starting HTTP server
2020/03/11 17:07:09 [DEBUG] - handler_echo.go:[13] - (*Service).EchoHandler() - START   ==================================================================================
2020/03/11 17:07:09 [DEBUG] - httpservice.go:[153] - (*Service).Process() - Logging HTTP in request: reqID ['1']
2020/03/11 17:07:09 [DEBUG] - httpservice.go:[157] - (*Service).Process() - Check allowed HTTP method: reqID, request.Method, method ['1', 'POST', 'POST']
2020/03/11 17:07:09 [DEBUG] - httpservice.go:[166] - (*Service).Process() - Check authentication method: reqID, AuthType ['1', 'INTERNAL']
2020/03/11 17:07:09 [DEBUG] - httpservice.go:[190] - (*Service).Process() - JWT is on. Check JSON web token: reqID ['1']
2020/03/11 17:07:09 [INFO] - httpservice.go:[196] - (*Service).Process() - ID=[1], code=[8005], mes=[JWT token does not present in Cookie. You have to authorize first.], causemes=['http: named cookie not present']
2020/03/11 17:07:09 [ERROR] - httpservice.go:[272] - (*Service).processError() - reqID:['1'], ID=[1], code=[8005], mes=[JWT token does not present in Cookie. You have to authorize first.], causemes=['http: named cookie not present'], caller=[httpservice.go:[195] - (*Service).Process()], trace='
github.com/romapres2010/httpserver/error.WithCause
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:86
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).Process
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:195
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).EchoHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_echo.go:16
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:138
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 17:07:09 [DEBUG] - handler_echo.go:[39] - (*Service).EchoHandler() - SUCCESS ==================================================================================
2020/03/11 17:08:25 [DEBUG] - handler_auth.go:[58] - (*Service).SinginHandler() - START   ==================================================================================
2020/03/11 17:08:25 [DEBUG] - handler_auth.go:[71] - (*Service).SinginHandler() - Get Authorization header: reqID, username ['2', 'testus']
2020/03/11 17:08:25 [INFO] - handler_auth.go:[20] - (*Service).checkAuthentication() - ID=[2], code=[8010], mes=[Internal authentication - invalid user or password: username], args=['testus']
2020/03/11 17:08:25 [INFO] - handler_auth.go:[75] - (*Service).SinginHandler() - ID=[2], code=[8010], mes=[Internal authentication - invalid user or password: username], args=['testus']
2020/03/11 17:08:25 [ERROR] - httpservice.go:[272] - (*Service).processError() - reqID:['2'], ID=[2], code=[8010], mes=[Internal authentication - invalid user or password: username], args=['testus'], caller=[handler_auth.go:[19] - (*Service).checkAuthentication()], trace='
github.com/romapres2010/httpserver/error.New
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:72
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).checkAuthentication
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:19
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).SinginHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:74
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:138
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 17:08:35 [DEBUG] - handler_auth.go:[58] - (*Service).SinginHandler() - START   ==================================================================================
2020/03/11 17:08:35 [DEBUG] - handler_auth.go:[71] - (*Service).SinginHandler() - Get Authorization header: reqID, username ['3', 'roman']
2020/03/11 17:08:35 [INFO] - handler_auth.go:[20] - (*Service).checkAuthentication() - ID=[3], code=[8010], mes=[Internal authentication - invalid user or password: username], args=['roman']
2020/03/11 17:08:35 [INFO] - handler_auth.go:[75] - (*Service).SinginHandler() - ID=[3], code=[8010], mes=[Internal authentication - invalid user or password: username], args=['roman']
2020/03/11 17:08:35 [ERROR] - httpservice.go:[272] - (*Service).processError() - reqID:['3'], ID=[3], code=[8010], mes=[Internal authentication - invalid user or password: username], args=['roman'], caller=[handler_auth.go:[19] - (*Service).checkAuthentication()], trace='
github.com/romapres2010/httpserver/error.New
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/error/error.go:72
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).checkAuthentication
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:19
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).SinginHandler
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/handler_auth.go:74
github.com/romapres2010/httpserver/httpserver/httpservice.(*Service).RecoverWrap.func1
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/httpserver/httpservice/httpservice.go:138
net/http.HandlerFunc.ServeHTTP
	c:/go/src/net/http/server.go:2007
github.com/gorilla/mux.(*Router).ServeHTTP
	D:/roman/YandexDisk/golang/src/github.com/romapres2010/httpserver/vendor/github.com/gorilla/mux/mux.go:210
net/http.(*ServeMux).ServeHTTP
	c:/go/src/net/http/server.go:2387
net/http.serverHandler.ServeHTTP
	c:/go/src/net/http/server.go:2802
net/http.(*conn).serve
	c:/go/src/net/http/server.go:1890
runtime.goexit
	c:/go/src/runtime/asm_amd64.s:1357'
2020/03/11 17:08:44 [DEBUG] - handler_auth.go:[58] - (*Service).SinginHandler() - START   ==================================================================================
2020/03/11 17:08:44 [DEBUG] - handler_auth.go:[71] - (*Service).SinginHandler() - Get Authorization header: reqID, username ['4', 'roman']
2020/03/11 17:08:44 [INFO] - handler_auth.go:[23] - (*Service).checkAuthentication() - Success Internal Authentication: username ['roman']
2020/03/11 17:08:44 [DEBUG] - handler_auth.go:[90] - (*Service).SinginHandler() - Create new JSON web token: reqID ['4']
2020/03/11 17:08:44 [DEBUG] - jwt.go:[66] - CreateJWT() - JWT: claims ['&{roman { 1583955724  0  0 }}']
2020/03/11 17:08:44 [DEBUG] - jwt.go:[77] - CreateJWT() - JWT: tokenString ['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTU1NzI0fQ.YKdACE0zrPz_uV1nwmgo2RfbdG833cWZoz083AW7U7s']
2020/03/11 17:08:44 [DEBUG] - handler_auth.go:[101] - (*Service).SinginHandler() - Set HTTP Cookie: reqID, cookie ['4', 'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InJvbWFuIiwiZXhwIjoxNTgzOTU1NzI0fQ.YKdACE0zrPz_uV1nwmgo2RfbdG833cWZoz083AW7U7s; Expires=Wed, 11 Mar 2020 19:42:04 GMT']
2020/03/11 17:08:44 [DEBUG] - handler_auth.go:[106] - (*Service).SinginHandler() - SUCCESS ==================================================================================
2020/03/11 17:09:19 [INFO] - daemon.go:[143] - (*Daemon).Run() - Exiting, got signal ['interrupt']
2020/03/11 17:09:19 [INFO] - daemon.go:[156] - (*Daemon).Shutdown() - Shutting down daemon
2020/03/11 17:09:19 [INFO] - httpserver.go:[215] - (*Server).Shutdown() - Waiting for shutdown HTTP Server: sec ['30']
2020/03/11 17:09:19 [INFO] - httpserver.go:[231] - (*Server).Shutdown() - HTTP Server shutdown successfuly
2020/03/11 17:09:19 [INFO] - daemon.go:[168] - (*Daemon).Shutdown() - Daemon is shutdown
2020/03/11 17:09:19 [INFO] - main.go:[163] - main.func1() - Server is shutdown
